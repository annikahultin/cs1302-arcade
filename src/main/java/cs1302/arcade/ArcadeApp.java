package cs1302.arcade;

import java.util.Random;

import javafx.application.Application;
import javafx.application.Platform;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.shape.Rectangle;
import javafx.stage.Stage;
import javafx.event.EventHandler;
import javafx.scene.input.KeyEvent;
import javafx.scene.input.KeyCode;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.VBox;
import javafx.scene.layout.HBox;
import javafx.scene.image.ImageView;
import javafx.scene.control.Button;
import javafx.event.EventHandler;
import javafx.event.ActionEvent;
import javafx.scene.image.Image;
import javafx.geometry.Pos;
import javafx.scene.layout.TilePane;
import javafx.scene.control.MenuBar;
import javafx.scene.control.Menu;
import javafx.scene.control.MenuItem;

/**
 * Application subclass for {@code ArcadeApp}.
 * @version 2019.fa
 */
public class ArcadeApp extends Application {

    Group group = new Group();           // main container
    Random rng = new Random();           // random number generator
    Rectangle r = new Rectangle(20, 20); // some rectangle
    Scene titleScene;
    Scene gameScene;
    int whiteScore = 2;
    int blackScore = 2;
    TilePane gameBoard;

    /**
     * Return a mouse event handler that moves to the rectangle to a random
     * position any time a mouse event is generated by the associated node.
     * @return the mouse event handler
     */
    private EventHandler<? super MouseEvent> createMouseHandler() {
        return event -> {
            System.out.println(event);
            r.setX(rng.nextDouble() * (640 - r.getWidth()));
            r.setY(rng.nextDouble() * (480 - r.getHeight()));
        };
    } // createMouseHandler

    /**
     * Return a key event handler that moves to the rectangle to the left
     * or the right depending on what key event is generated by the associated
     * node.
     * @return the key event handler
     */
    private EventHandler<? super KeyEvent> createKeyHandler() {
        return event -> {
            System.out.println(event);
            switch (event.getCode()) {
            case LEFT:  // KeyCode.LEFT
                r.setX(r.getX() - 10.0);
                break;
            case RIGHT: // KeyCode.RIGHT
                r.setX(r.getX() + 10.0);
                break;
            default:
                // do nothing
            } // switch
            // TODO bounds checking
        };
    } // createKeyHandler

    /**
     * Sets up the game window.
     */
    private void setUpGameScene() {
        MenuBar menuBar = new MenuBar();
        Menu menu = new Menu("Pause");
        MenuItem resume = new MenuItem("Resume");
        MenuItem endGame = new MenuItem("Leave Game");
        menu.getItems().addAll(resume, endGame);
        menuBar.getMenus().add(menu);
        HBox header = new HBox();
        Label score = new Label("Score:   White = 2    Black = 2");
        header.getChildren().add(score);
        gameBoard = new TilePane();
        gameBoard.setPrefCols(8);

        gameScene = new Scene(group, 640, 480);
    } //setUpGameWindow

    /**
     * Sets up the intial title window for the game.
     * @param stage  the stage object for the app.
     */
    private void setUpTitleScene(Stage stage) {
        VBox vbox = new VBox();
        HBox hbox = new HBox();
        Image image = new Image("https://store-images.s-microsoft.com/image/apps."
            + "40439.13902272735533786.62dcd87f-a7f1-4a5f-a2b7-ff69f15a9bcc.fee5bed0-c445-44c4-"
        + "b6cb-09ae31b4c69b?mode=scale&q=90&h=1080&w=1920", 677, 378, true, false);
        ImageView iv = new ImageView(image);
        Button playButton = new Button("PLAY");
        EventHandler<ActionEvent> playEvent = event -> stage.setScene(gameScene);
        playButton.setOnAction(playEvent);
        hbox.getChildren().add(playButton);
        hbox.setAlignment(Pos.CENTER_LEFT);
        vbox.getChildren().addAll(hbox, iv);
        titleScene = new Scene(vbox, 672, 490);
    } //setUpTitleScene

    /** {@inheritDoc} */
    @Override
    public void start(Stage stage) {
        setUpGameScene();
        setUpTitleScene(stage);
//        r.setX(50);                                // 50px in the x direction (right)
//        r.setY(50);                                // 50ps in the y direction (down)
//        group.getChildren().add(r);                // add to main container
//        r.setOnMouseClicked(createMouseHandler()); // clicks on the rectangle move it randomly
//        group.setOnKeyPressed(createKeyHandler()); // left-right key presses move the rectangle

//        Scene scene = new Scene(group, 640, 480);
        stage.setTitle("cs1302-arcade!");
        stage.setScene(titleScene);
        stage.sizeToScene();
        stage.show();

        // the group must request input focus to receive key events
        // @see https://docs.oracle.com/javase/8/javafx/api/javafx/scene/Node.html#requestFocus--
        group.requestFocus();

    } // start

} // ArcadeApp
